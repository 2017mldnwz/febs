server:
  port: 8202

spring:
  zipkin:
    sender:
      type: rabbit  #指定了使用RabbitMQ收集追踪信息
    sleuth:
      sampler:
        probability: 1  #默认值为0.1，即采样率才1/10，发送10笔请求只有一笔会被采集。为了测试方便，我们可以将它设置为1，即100%采样
    rabbitmq:  #15672是RabbitMQ的管理页面端口，5672是AMPQ端口
      host: ${rabbitmq.url}
      port: 5672
      username: febs
      password: 123456
  application:
    name: FEBS-Server-Test
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      #因为我们在febs-common模块里引入了mybatis-plus-boot-starter，该starter包含数据库自动装配配置，而febs-gateway、febs-server-system和febs-server-test模块并没有配置数据库，所以我们需要在它们的配置文件application.yml里添加如下配置来关闭数据库自动装配

  boot:
    admin:
      client:
        url: http://${febs-monitor-admin}:8401
        username: febs
        password: 123456

info:
  app:
    name: ${spring.application.name}
    description: "@project.description@"
    version: "@project.version@"

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

eureka:
  instance:
    lease-renewal-interval-in-seconds: 20 #向注册中心发送心跳的间隔时间，证明服务还活着
  client:
    register-with-eureka: true #表示注册到注册中心
    fetch-registry: true #获取注册信息
    instance-info-replication-interval-seconds: 30 #更新实例信息的变化到注册中心的间隔时间
    registry-fetch-interval-seconds: 3 #从eureka获取注册表信息的频率
    serviceUrl:
      defaultZone: http://febs:123456@${febs-register}:8001/register/eureka/ ##指定Eureka服务端地址
security:
  oauth2:
    resource:
      id: ${spring.application.name}
      user-info-uri: http://${febs-gateway}:8301/auth/user

feign:
  hystrix:
    enabled: true
  shareSecurityContext: true #这样做会把SecurityContext对象从你当前主线程传输到Hystrix线程。因为开启熔断后，默认是线程池隔离，所以熔断机制是在另一个线程上执行，不能接受到本地服务的头信息，也就不能将头信息向上游服务传递，又因为涉及到网络传输，不能讲隔离属性改成信号量隔离。
