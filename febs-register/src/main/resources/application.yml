server:
  port: 8001
  servlet:
    context-path: /register
    
spring:
  application:
    name: FEBS-Register #定义服务名称为FEBS-Register
  security:
    user:
      name: febs
      password: 123456
  boot:
    admin:
      client:
        url: http://${febs-monitor-admin}:8401  #指定了SBA服务端地址
        username: febs   #对应SBA服务端的用户名
        password: 123456  #对应SBA服务端的密码

info:
  app:
    name: ${spring.application.name}
    description: "@project.description@"
    version: "@project.version@"

management:
  endpoints:
    web:
      exposure:
        include: '*'  #表示将SBA客户端的所有监控端点都暴露给SBA服务端
  endpoint:
    health:
      show-details: ALWAYS  #表示总是展示详细的健康信息


eureka:
  instance:
    hostname: ${febs-register} #指定了Eureka服务端的地址，因为我们是在本地搭建的，所以填写为localhost即可
  client:
    register-with-eureka: false  #表示是否将服务注册到Eureka服务端，由于自身就是Eureka服务端，所以设置为false
    fetch-registry: false  #表示是否从Eureka服务端获取服务信息，因为这里只搭建了一个Eureka服务端，并不需要从别的Eureka服务端同步服务信息，所以这里设置为false
    instance-info-replication-interval-seconds: 30 #微服务更新实例信息的变化到Eureka服务端的间隔时间，单位为秒，这里指定为30秒（这就是微服务启动后，要过一会才能注册到Eureka服务端的原因）
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}${server.servlet.context-path}/eureka/ #指定Eureka服务端的地址，这里为当前项目地址，即 http://localhost:8001/register/eureka/